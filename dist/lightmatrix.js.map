{"version":3,"file":"lightmatrix.js","sources":["../src/matrix.js","../src/index.js"],"sourcesContent":["const isNumber = num => (typeof num === 'number' && !isNaN(num));\n\nconst isNumeric = num => {\n  const number = Number(String(num instanceof Object ? true : num));\n  return isNumber(number);\n};\n\nconst reciprocal = num => 1 / num;\n\nconst normalizeNumber = num => ((num === 0) ? 0 : num);\n\nconst isMatrix = (matrix) => {\n\n  if (!(matrix instanceof Array) || matrix.length === 0) return false;\n\n  let cols;\n  const [...cloneMatrix] = matrix;\n\n  while (cloneMatrix.length > 0) {\n    const row = cloneMatrix.shift();\n    const isArrayRow = row instanceof Array;\n\n    if (!isArrayRow) return false;\n\n    cols = cols || row.length;\n\n    const sameRowCols = row.length === cols;\n    const numericRowElements = row.filter(e => isNumeric(e)).length === cols;\n\n    if (!(sameRowCols && numericRowElements)) return false;\n  }\n\n  return true;\n\n};\n\nconst pivotMatrix = (matrix, row, col) => {\n  const newMatrix = [];\n\n  for (let i = 0; i < matrix.length; i += 1) {\n    if (i !== row) {\n      const newRow = [];\n      for (let j = 0; j < matrix[0].length; j += 1) {\n        if (j !== col) {\n          newRow.push(normalizeNumber(matrix[i][j]));\n        }\n      }\n      newMatrix.push(newRow);\n    }\n  }\n\n  return newMatrix;\n};\n\nconst scalarProduct = (n, matrix) => {\n  const [...newMatrix] = matrix;\n  const dim = [matrix.length, matrix[0].length];\n\n  for (let i = 0; i < dim[0]; i += 1) {\n    for (let j = 0; j < dim[1]; j += 1) {\n      newMatrix[i][j] = normalizeNumber(matrix[i][j] * n);\n    }\n  }\n\n  return newMatrix;\n};\n\nconst matrixProduct = (matA, matB) => {\n\n  const dimA = [matA.length, matA[0].length];\n  const dimB = [matB.length, matB[0].length];\n  const matrix = [];\n\n  if (dimA[1] === dimB[0]) {\n    for (let i = 0; i < dimA[0]; i += 1) {\n      matrix[i] = [];\n      for (let j = 0; j < dimB[1]; j += 1) {\n        let s = 0;\n\n        for (let k = 0; k < dimA[1]; k += 1) {\n          s += matA[i][k] * matB[k][j];\n        }\n\n        matrix[i][j] = normalizeNumber(s);\n      }\n    }\n    return matrix;\n  }\n\n  throw new Error('Matrices not compatible.');\n\n};\n\nconst sum = (a, b) => {\n\n  if (!(isMatrix(a) && isMatrix(b))) {\n    throw new Error('Invalid matrix specification.');\n  }\n\n  const matrix = [];\n  const dimA = [a.length, a[0].length];\n  const dimB = [b.length, b[0].length];\n\n  if (!(dimA[0] === dimB[0] && dimA[1] === dimB[1])) {\n    throw new Error('Matrices not compatible.');\n  }\n\n  for (let i = 0; i < dimA[0]; i += 1) {\n    matrix[i] = [];\n    for (let j = 0; j < dimA[1]; j += 1) {\n      matrix[i][j] = normalizeNumber(a[i][j] + b[i][j]);\n    }\n  }\n\n  return matrix;\n\n};\n\nconst product = (a, b) => {\n\n  if (isNumber(a)) {\n    if (isNumber(b)) return a * b;\n    else if (isMatrix(b)) return scalarProduct(a, b);\n  }\n\n  else if (isMatrix(a)) {\n    if (isNumber(b)) return scalarProduct(b, a);\n    else if (isMatrix(b)) return matrixProduct(a, b);\n  }\n\n  throw new Error('Invalid arguments supplied.');\n\n};\n\nexport default {\n\n  ok: isMatrix,\n\n  dimension(matrix) {\n    if (this.ok(matrix)) {\n      return [matrix.length, matrix[0].length];\n    }\n    throw new Error('Invalid matrix specification.');\n  },\n\n  unit(dimension) {\n    const dim = (dimension >= 1 && dimension) || 2;\n    const unitmatrix = [];\n\n    for (let i = 0; i < dim; i += 1) {\n      unitmatrix[i] = [];\n      for (let j = 0; j < dim; j += 1) {\n        unitmatrix[i][j] = (i === j) ? 1 : 0;\n      }\n    }\n\n    return unitmatrix;\n  },\n\n  equal(a, b) {\n    const dimA = this.dimension(a);\n    const dimB = this.dimension(b);\n\n    if (!(dimA[0] === dimB[0] && dimA[1] === dimB[1])) return false;\n\n    for (let i = 0; i < dimA[0]; i += 1) {\n      for (let j = 0; j < dimA[1]; j += 1) {\n        if (a[i][j] !== b[i][j]) return false;\n      }\n    }\n\n    return true;\n  },\n\n  sum,\n\n  product,\n\n  transpose(matrix) {\n    const dim = this.dimension(matrix).reverse();\n    const newmatrix = [];\n\n    for (let i = 0; i < dim[0]; i += 1) {\n      newmatrix[i] = [];\n      for (let j = 0; j < dim[1]; j += 1) {\n        newmatrix[i][j] = normalizeNumber(matrix[j][i]);\n      }\n    }\n\n    return newmatrix;\n  },\n\n  determinant(matrix) {\n\n    let det;\n    const dim = this.dimension(matrix);\n\n    if (dim[0] !== dim[1]) throw new Error('Square matrix required.');\n\n    if (dim[0] === 1) return matrix[0][0];\n\n    for (let i = 0; i < matrix[0].length; i += 1) {\n      det = det || 0;\n      det += ((i & 1) === 0 ? 1 : -1) * matrix[0][i] * this.determinant(pivotMatrix(matrix, 0, i));\n    }\n\n    return det;\n\n  },\n\n  minors(matrix) {\n\n    const dim = this.dimension(matrix);\n    const newmatrix = [];\n\n    if (dim[0] !== dim[1]) throw new Error('Square matrix required.');\n\n    for (let i = 0; i < dim[0]; i += 1) {\n      newmatrix[i] = [];\n      for (let j = 0; j < dim[0]; j += 1) {\n        newmatrix[i][j] = normalizeNumber(this.determinant(pivotMatrix(matrix, i, j)));\n      }\n    }\n\n    return newmatrix;\n\n  },\n\n  cofactors(matrix) {\n    const dim = this.dimension(matrix);\n    const newmatrix = this.minors(matrix);\n\n    for (let i = 0; i < dim[0]; i += 1) {\n      for (let j = 0; j < dim[0]; j += 1) {\n        newmatrix[i][j] = normalizeNumber(newmatrix[i][j] * (((i + j) & 1) === 0 ? 1 : -1));\n      }\n    }\n\n    return newmatrix;\n  },\n\n  adjoint(matrix) {\n    return this.transpose(this.cofactors(matrix));\n  },\n\n  inverse(matrix) {\n    const det = this.determinant(matrix);\n\n    if (det === 0) throw new Error('Cannot compute inverse of singular matrix.');\n\n    return this.product(reciprocal(det), this.adjoint(matrix));\n  }\n\n};\n","import Matrix from './matrix';\n\nconst bindMatrix = method => Matrix[method].bind(Matrix);\n\nconst lightmatrix = {\n  ok: bindMatrix('ok'),\n  valid: bindMatrix('ok'),\n  order: bindMatrix('dimension'),\n  dimension: bindMatrix('dimension'),\n  unit: bindMatrix('unit'),\n  identity: bindMatrix('unit'),\n  equal: bindMatrix('equal'),\n  same: bindMatrix('equal'),\n  sum: bindMatrix('sum'),\n  add: bindMatrix('sum'),\n  product: bindMatrix('product'),\n  multiply: bindMatrix('product'),\n  transpose: bindMatrix('transpose'),\n  determinant: bindMatrix('determinant'),\n  minors: bindMatrix('minors'),\n  cofactors: bindMatrix('cofactors'),\n  adjoint: bindMatrix('adjoint'),\n  inverse: bindMatrix('inverse')\n};\n\nexport default lightmatrix;\n"],"names":["isNumber","num","isNaN","isNumeric","number","Number","String","Object","reciprocal","normalizeNumber","isMatrix","matrix","Array","length","cols","cloneMatrix","row","shift","isArrayRow","sameRowCols","numericRowElements","filter","e","pivotMatrix","col","newMatrix","i","newRow","j","push","scalarProduct","n","dim","matrixProduct","matA","matB","dimA","dimB","s","k","Error","sum","a","b","product","ok","dimension","unit","unitmatrix","equal","transpose","reverse","newmatrix","determinant","det","minors","cofactors","adjoint","inverse","bindMatrix","method","Matrix","bind","lightmatrix","valid","order","identity","same","add","multiply"],"mappings":"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"}